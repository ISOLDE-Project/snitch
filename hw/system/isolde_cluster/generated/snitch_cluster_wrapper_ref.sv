// Copyright 2021 ETH Zurich and University of Bologna.
// Solderpad Hardware License, Version 0.51, see LICENSE for details.
// SPDX-License-Identifier: SHL-0.51

// AUTOMATICALLY GENERATED by clustergen.py; edit the script or configuration
// instead.







`include "axi/typedef.svh"

// verilog_lint: waive-start package-filename
package snitch_cluster_pkg;

  localparam int unsigned NrCores = 2;
  localparam int unsigned NrHives = 1;

  localparam int unsigned AddrWidth = 32;
  localparam int unsigned NarrowDataWidth = 32;
  localparam int unsigned WideDataWidth = 32;

  localparam int unsigned NarrowIdWidthIn = 2;
  localparam int unsigned NrMasters = 3;
  localparam int unsigned NarrowIdWidthOut = $clog2(NrMasters) + NarrowIdWidthIn;

  localparam int unsigned NrDmaMasters = 2 + 1;
  localparam int unsigned WideIdWidthIn = 2;
  localparam int unsigned WideIdWidthOut = $clog2(NrDmaMasters) + WideIdWidthIn;

  localparam int unsigned NarrowUserWidth = 1;
  localparam int unsigned WideUserWidth = 1;

  localparam int unsigned ICacheLineWidth [NrHives] = '{
    256
};
  localparam int unsigned ICacheLineCount [NrHives] = '{
    128
};
  localparam int unsigned ICacheSets [NrHives] = '{
    2
};

  localparam int unsigned Hive [NrCores] = '{0, 0};

  typedef struct packed {
    logic [0:0] reserved;
  } sram_cfg_t;

  typedef struct packed {
    sram_cfg_t icache_tag;
    sram_cfg_t icache_data;
    sram_cfg_t tcdm;
  } sram_cfgs_t;

  typedef logic [AddrWidth-1:0]         addr_t;
  typedef logic [NarrowDataWidth-1:0]   data_t;
  typedef logic [NarrowDataWidth/8-1:0] strb_t;
  typedef logic [WideDataWidth-1:0]     data_dma_t;
  typedef logic [WideDataWidth/8-1:0]   strb_dma_t;
  typedef logic [NarrowIdWidthIn-1:0]   narrow_in_id_t;
  typedef logic [NarrowIdWidthOut-1:0]  narrow_out_id_t;
  typedef logic [WideIdWidthIn-1:0]     wide_in_id_t;
  typedef logic [WideIdWidthOut-1:0]    wide_out_id_t;
  typedef logic [NarrowUserWidth-1:0]   user_t;
  typedef logic [WideUserWidth-1:0]     user_dma_t;

  `AXI_TYPEDEF_ALL(narrow_in, addr_t, narrow_in_id_t, data_t, strb_t, user_t)
  `AXI_TYPEDEF_ALL(narrow_out, addr_t, narrow_out_id_t, data_t, strb_t, user_t)
  `AXI_TYPEDEF_ALL(wide_in, addr_t, wide_in_id_t, data_dma_t, strb_dma_t, user_dma_t)
  `AXI_TYPEDEF_ALL(wide_out, addr_t, wide_out_id_t, data_dma_t, strb_dma_t, user_dma_t)

  function automatic snitch_pma_pkg::rule_t [snitch_pma_pkg::NrMaxRules-1:0] get_cached_regions();
    automatic snitch_pma_pkg::rule_t [snitch_pma_pkg::NrMaxRules-1:0] cached_regions;
    cached_regions = '{default: '0};
    cached_regions[0] = '{base: 32'h80000000, mask: 32'h80000000};
    return cached_regions;
  endfunction

  localparam snitch_pma_pkg::snitch_pma_t SnitchPMACfg = '{
      NrCachedRegionRules: 1,
      CachedRegion: get_cached_regions(),
      default: 0
  };

  

  localparam snitch_ssr_pkg::ssr_cfg_t [3-1:0] SsrCfgs [2] = '{
    '{'{0, 0, 0, 0, 1, 1, 4, 15, 17, 3, 4, 3, 8, 4, 3},
      '{0, 0, 0, 0, 1, 1, 4, 15, 17, 3, 4, 3, 8, 4, 3},
      '{0, 0, 0, 0, 1, 1, 4, 15, 17, 3, 4, 3, 8, 4, 3}},
    '{/*None*/ '0,
      /*None*/ '0,
      /*None*/ '0}
  };

  localparam logic [3-1:0][4:0] SsrRegs [2] = '{
    '{2, 1, 0},
    '{/*None*/ 0, /*None*/ 0, /*None*/ 0}
  };

endpackage
// verilog_lint: waive-stop package-filename

module snitch_cluster_wrapper (
  input  logic                                   clk_i,
  input  logic                                   rst_ni,
  input  logic [snitch_cluster_pkg::NrCores-1:0] debug_req_i,
  input  logic [snitch_cluster_pkg::NrCores-1:0] meip_i,
  input  logic [snitch_cluster_pkg::NrCores-1:0] mtip_i,
  input  logic [snitch_cluster_pkg::NrCores-1:0] msip_i,
  input  snitch_cluster_pkg::narrow_in_req_t     narrow_in_req_i,
  output snitch_cluster_pkg::narrow_in_resp_t    narrow_in_resp_o,
  output snitch_cluster_pkg::narrow_out_req_t    narrow_out_req_o,
  input  snitch_cluster_pkg::narrow_out_resp_t   narrow_out_resp_i,
  output snitch_cluster_pkg::wide_out_req_t      wide_out_req_o,
  input  snitch_cluster_pkg::wide_out_resp_t     wide_out_resp_i,
  input  snitch_cluster_pkg::wide_in_req_t       wide_in_req_i,
  output snitch_cluster_pkg::wide_in_resp_t      wide_in_resp_o
);

  localparam int unsigned NumIntOutstandingLoads [2] = '{1, 1};
  localparam int unsigned NumIntOutstandingMem [2] = '{4, 4};
  localparam int unsigned NumFPOutstandingLoads [2] = '{4, 4};
  localparam int unsigned NumFPOutstandingMem [2] = '{4, 4};
  localparam int unsigned NumDTLBEntries [2] = '{1, 1};
  localparam int unsigned NumITLBEntries [2] = '{1, 1};
  localparam int unsigned NumSequencerInstr [2] = '{16, 16};
  localparam int unsigned NumSsrs [2] = '{3, 1};
  localparam int unsigned SsrMuxRespDepth [2] = '{4, 4};

  // Snitch cluster under test.
  snitch_cluster #(
    .PhysicalAddrWidth (32),
    .NarrowDataWidth (32),
    .WideDataWidth (32),
    .NarrowIdWidthIn (snitch_cluster_pkg::NarrowIdWidthIn),
    .WideIdWidthIn (snitch_cluster_pkg::WideIdWidthIn),
    .NarrowUserWidth (snitch_cluster_pkg::NarrowUserWidth),
    .WideUserWidth (snitch_cluster_pkg::WideUserWidth),
    .BootAddr (32'h1000),
    .narrow_in_req_t (snitch_cluster_pkg::narrow_in_req_t),
    .narrow_in_resp_t (snitch_cluster_pkg::narrow_in_resp_t),
    .narrow_out_req_t (snitch_cluster_pkg::narrow_out_req_t),
    .narrow_out_resp_t (snitch_cluster_pkg::narrow_out_resp_t),
    .wide_out_req_t (snitch_cluster_pkg::wide_out_req_t),
    .wide_out_resp_t (snitch_cluster_pkg::wide_out_resp_t),
    .wide_in_req_t (snitch_cluster_pkg::wide_in_req_t),
    .wide_in_resp_t (snitch_cluster_pkg::wide_in_resp_t),
    .NrHives (1),
    .NrCores (2),
    .TCDMDepth (1024),
    .ZeroMemorySize (64),
    .ClusterPeriphSize (64),
    .NrBanks (32),
    .DMAAxiReqFifoDepth (3),
    .DMAReqFifoDepth (3),
    .ICacheLineWidth (snitch_cluster_pkg::ICacheLineWidth),
    .ICacheLineCount (snitch_cluster_pkg::ICacheLineCount),
    .ICacheSets (snitch_cluster_pkg::ICacheSets), 
    .RVE (2'b00),
    .Xdma (2'b10),
    .SnitchPMACfg (snitch_cluster_pkg::SnitchPMACfg),
    .NumIntOutstandingLoads (NumIntOutstandingLoads),
    .NumIntOutstandingMem (NumIntOutstandingMem),
    .NumDTLBEntries (NumDTLBEntries),
    .NumITLBEntries (NumITLBEntries),
    .Hive (snitch_cluster_pkg::Hive),
    .Topology (snitch_pkg::LogarithmicInterconnect),
    .Radix (2),
    .RegisterOffloadReq (1),
    .RegisterOffloadRsp (1),
    .RegisterCoreReq (1),
    .RegisterCoreRsp (1),
    .RegisterTCDMCuts (0),
    .RegisterExtWide (0),
    .RegisterExtNarrow (0),
    .NarrowXbarLatency (axi_pkg::CUT_ALL_PORTS),
    .WideXbarLatency (axi_pkg::CUT_ALL_PORTS),
    .WideMaxMstTrans (4),
    .WideMaxSlvTrans (4),
    .NarrowMaxMstTrans (4),
    .NarrowMaxSlvTrans (4),
    .sram_cfg_t (snitch_cluster_pkg::sram_cfg_t),
    .sram_cfgs_t (snitch_cluster_pkg::sram_cfgs_t)
  ) i_cluster (
    .clk_i,
    .rst_ni,
    .debug_req_i,
    .meip_i,
    .mtip_i,
    .msip_i,
    .hart_base_id_i (10'h0),
    .cluster_base_addr_i (32'h10000000),
    .clk_d2_bypass_i (1'b0),
    .sram_cfgs_i (snitch_cluster_pkg::sram_cfgs_t'('0)),
    .narrow_out_req_o,
    .narrow_out_resp_i,
    .wide_out_req_o,
    .wide_out_resp_i
  );
endmodule
